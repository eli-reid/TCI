<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Event Handler</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="module-EventHandler">
<span id="event-handler"></span><h1>Event Handler</h1>
<p>Event Handler</p>
<dl class="class">
<dt id="EventHandler.EventHandler">
<em class="property">class </em><code class="sig-prename descclassname">EventHandler.</code><code class="sig-name descname">EventHandler</code></dt>
<dd><p>Event Handler</p>
<dl class="method">
<dt id="EventHandler.EventHandler.emit">
<em class="property">classmethod </em><code class="sig-name descname">emit</code><span class="sig-paren">(</span><em class="sig-param">sender: any</em>, <em class="sig-param">event: str</em>, <em class="sig-param">obj: object = None</em>, <em class="sig-param">once: bool = False</em><span class="sig-paren">)</span> &#x2192; None</dt>
<dd><p>EventHandler.emit - Emits event to callback functions</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>sender</strong> (<em>any</em>) – what is responsible for the event</p></li>
<li><p><strong>event</strong> (<em>str</em>) – name of event</p></li>
<li><p><strong>obj</strong> (<em>object</em>) – anything to pass to callback</p></li>
<li><p><strong>once</strong> (<em>bool</em>) – if it is a one time event</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>None</p>
</dd>
<dt class="field-odd">Return type</dt>
<dd class="field-odd"><p>None</p>
</dd>
<dt class="field-even">Raise</dt>
<dd class="field-even"><p>TypeError if event isn’t string</p>
</dd>
<dt class="field-odd">Raise</dt>
<dd class="field-odd"><p>TypeError if func isn’t function pointer</p>
</dd>
</dl>
</dd></dl>

<dl class="method">
<dt id="EventHandler.EventHandler.getCallbackFuncs">
<em class="property">classmethod </em><code class="sig-name descname">getCallbackFuncs</code><span class="sig-paren">(</span><em class="sig-param">event: str</em><span class="sig-paren">)</span> &#x2192; list</dt>
<dd><p>EventHandler.getCallbackFuncs - gets list of callback functions for event</p>
<dl class="field-list simple">
<dt class="field-odd">Returns</dt>
<dd class="field-odd"><p>list of function pointers or empty list</p>
</dd>
<dt class="field-even">Return type</dt>
<dd class="field-even"><p>list[types.FunctionType] or list[]</p>
</dd>
<dt class="field-odd">Raise</dt>
<dd class="field-odd"><p>TypeError if event isn’t string</p>
</dd>
</dl>
</dd></dl>

<dl class="method">
<dt id="EventHandler.EventHandler.getEvents">
<em class="property">classmethod </em><code class="sig-name descname">getEvents</code><span class="sig-paren">(</span><span class="sig-paren">)</span> &#x2192; list</dt>
<dd><p>EventHandler.getEvents -  Gets list of events</p>
<dl class="field-list simple">
<dt class="field-odd">Returns</dt>
<dd class="field-odd"><p>list of event names</p>
</dd>
<dt class="field-even">Return type</dt>
<dd class="field-even"><p>list[str] or list[]</p>
</dd>
</dl>
</dd></dl>

<dl class="method">
<dt id="EventHandler.EventHandler.on">
<em class="property">classmethod </em><code class="sig-name descname">on</code><span class="sig-paren">(</span><em class="sig-param">event: str</em>, <em class="sig-param">func: function</em><span class="sig-paren">)</span> &#x2192; None</dt>
<dd><p>EventHandler.on - sets callback functions to event</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>event</strong> (<em>str</em>) – name of event</p></li>
<li><p><strong>func</strong> (<em>types.FunctionType</em><em> or </em><em>types.MethodType</em>) – pointer to callback function or method</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>None</p>
</dd>
<dt class="field-odd">Return type</dt>
<dd class="field-odd"><p>None</p>
</dd>
<dt class="field-even">Raise</dt>
<dd class="field-even"><p>TypeError if event isn’t string</p>
</dd>
<dt class="field-odd">Raise</dt>
<dd class="field-odd"><p>TypeError if func isn’t function pointer</p>
</dd>
</dl>
</dd></dl>

<dl class="method">
<dt id="EventHandler.EventHandler.removeEvent">
<em class="property">classmethod </em><code class="sig-name descname">removeEvent</code><span class="sig-paren">(</span><em class="sig-param">event: str</em><span class="sig-paren">)</span> &#x2192; None</dt>
<dd><p>EventHandler.removeEvent - Removes event from system</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>event</strong> (<em>str</em>) – name of event</p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>True if event is registered</p>
</dd>
<dt class="field-odd">Rtypr</dt>
<dd class="field-odd"><p>bool</p>
</dd>
<dt class="field-even">Raise</dt>
<dd class="field-even"><p>TypeError if event isn’t string</p>
</dd>
</dl>
</dd></dl>

<dl class="method">
<dt id="EventHandler.EventHandler.removeFunc">
<em class="property">classmethod </em><code class="sig-name descname">removeFunc</code><span class="sig-paren">(</span><em class="sig-param">event: str</em>, <em class="sig-param">func: function</em><span class="sig-paren">)</span> &#x2192; None</dt>
<dd><p>EventHandler.removeFunc - Removes callback fucntion from event</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><ul class="simple">
<li><p><strong>event</strong> (<em>str</em>) – name of event</p></li>
<li><p><strong>func</strong> (<em>types.FunctionType</em><em> or </em><em>types.MethodType</em>) – pointer to callback function or method</p></li>
</ul>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p>True if event is registered</p>
</dd>
<dt class="field-odd">Return type</dt>
<dd class="field-odd"><p>bool</p>
</dd>
<dt class="field-even">Raise</dt>
<dd class="field-even"><p>TypeError if event isn’t string</p>
</dd>
<dt class="field-odd">Raise</dt>
<dd class="field-odd"><p>TypeError if func isn’t function pointer</p>
</dd>
</dl>
</dd></dl>

</dd></dl>

</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>